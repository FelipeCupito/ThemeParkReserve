syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

package services;

service ParkAdminService {
  rpc AddAttraction(Attraction) returns (google.protobuf.Empty);
  rpc AddPass(Pass) returns (google.protobuf.Empty);
  rpc AddSlotCapacity(SlotCapacity) returns (SlotCapacityResponse);
}

service ReservationService {
  rpc GetAttractions(google.protobuf.Empty) returns (AttractionList);
  rpc GetSingleSlotAvailability(Slot) returns (SlotCapacityResponse);
  rpc GetAttractionSlotsAvailabilityByRange(SlotRange) returns (SlotCapacityResponseList);
  rpc AddReservation(ReservationRequest) returns (ReservationResponse);
  rpc ConfirmReservation(ReservationRequest) returns (google.protobuf.Empty);
  rpc CancelReservation(ReservationRequest) returns (google.protobuf.Empty);
}

service RegistrationService {
  rpc RegisterUser(NotificationRegistryRequest) returns (google.protobuf.Empty);
  rpc UnregisterUser(NotificationRegistryRequest) returns (google.protobuf.Empty);
}

service QueryService {
  rpc GetSuggestedCapacity(DayRequest) returns (SuggestedCapacityResponseList);
  rpc GetConfirmedReservationsByDay(DayRequest) returns (ConfirmedReservationResponseList);
}

// -----------------------------------------------------------------------------------------//

message Attraction {
  string name = 1;
  int32 openTime = 2; // minutes since midnight
  int32 closeTime = 3; // minutes since midnight
  int32 minutesPerSlot = 4;
}

message AttractionList {
  repeated Attraction attractions = 1;
}

enum PassType {
  UNKNOWN = 0;
  UNLIMITED = 1;
  THREE = 2;
  HALF_DAY = 3;
}

enum ReservationType {
  RESERVATION_UNKNOWN = 0;
  RESERVATION_PENDING = 1;
  RESERVATION_CONFIRMED = 2;
}

message UUID {
   string value = 1;
}

message Pass {
  UUID id = 1;
  PassType type = 2;
  int32 day = 3;
}

message SlotCapacity {
  string attractionName = 1;
  int32 day = 2;
  int32 capacity = 3;
}

message SlotCapacityResponse {
  int32 confirmed = 1;
  int32 cancelled = 2;
  int32 pending = 3;
  int32 capacity = 4; //-1 no tiene capacidad
  string attractionName = 5;
  int32 slot = 6;
}

message SlotCapacityResponseList {
  repeated SlotCapacityResponse slotCapacityResponses = 1;
}

message Slot {
  string attractionName = 1;
  int32 day = 2;
  int32 minutes = 3;
}

message SlotRange {
  optional string attractionName = 1;
  int32 day = 2;
  int32 startMinutes = 3;
  int32 endMinutes = 4;
}

message ReservationRequest {
  UUID passId = 1;
  Slot slot = 2;
}

message ReservationResponse {
  UUID passId = 1;
  Slot slot = 2;
  ReservationType reservationType = 3;
}

message NotificationRegistryRequest {
  UUID passId = 1;
  string attractionName = 2;
  int32 day = 3;
}

message DayRequest {
  int32 day = 1;
}

message SuggestedCapacityResponse {
  string attractionName = 1;
  int32 suggestedCapacity = 2;
  int32 minutes = 3;
}

message SuggestedCapacityResponseList {
  repeated SuggestedCapacityResponse suggestedCapacityResponses = 1;
}

message ConfirmedReservationResponse {
  string attractionName = 1;
  repeated UUID confirmedUsers = 2;
  int32 minutes = 3;
}

message ConfirmedReservationResponseList {
  repeated ConfirmedReservationResponse confirmedReservationResponses = 1;
}